#ifndef __LMS8SuiteAppFrame__
#define __LMS8SuiteAppFrame__

/**
@file
Subclass of lms8_AppFrame_view, which is generated by wxFormBuilder.
*/

#include "lms8suiteApp_gui.h"

//// end generated include

#include "./utilities_gui/dlgDeviceInfo.h"
#include "./utilities_gui/SPI_wxgui.h"
#include "./utilities_gui/GPIO_wxgui.h"
#include "./utilities_gui/dlgConnectionSettings.h"
#include "./ADF4002/ADF4002_wxgui.h"
#include "./Si5351C/Si5351C_wxgui.h"

#include "./../LimeSuite.h" // B.J.


class LMScomms;
class LMS8001;
class lms8_pnlMiniLog;
// class fftviewer_frFFTviewer;
class lms8_ADF4002;
class lms8_ADF4002_wxgui;
class Si5351C;
class lms8_Si5351C_wxgui;
// class LMS_Programing_wxgui;
// class RFSpark_wxgui;
// class HPM7_wxgui;
// class FPGAcontrols_wxgui;
// class Myriad7_wxgui;
class lms8_dlgDeviceInfo;
class lms8_SPI_wxgui;
class lms8_GPIO_wxgui;

// class LMS7002M_Novena_wxgui;

/** Implementing AppFrame */
class LMS8SuiteAppFrame : public lms8_AppFrame_view
{
protected:
        // Handlers for AppFrame events.
        void OnClose(wxCloseEvent &event);
        void OnQuit(wxCommandEvent &event);
        void OnShowConnectionSettings(wxCommandEvent &event);
        void OnAbout(wxCommandEvent &event);
        
        //        void OnDataBoardConnect(wxCommandEvent& event);
        void HandleLMSevent(wxCommandEvent &event);
        //        void OnFFTviewerClose(wxCloseEvent& event);
        //        void OnShowFFTviewer(wxCommandEvent& event);
        void OnADF4002Close(wxCloseEvent &event);
        void OnShowADF4002(wxCommandEvent &event);
        void OnSi5351Close(wxCloseEvent &event);
        void OnShowSi5351C(wxCommandEvent &event);
        //        void OnProgramingClose(wxCloseEvent& event);
        //        void OnShowPrograming(wxCommandEvent& event);
        //        void OnRFSparkClose(wxCloseEvent& event);
        //        void OnShowRFSpark(wxCommandEvent& event);
        //        void OnHPM7Close(wxCloseEvent& event);
        //        void OnShowHPM7(wxCommandEvent& event);
        //        void OnFPGAcontrolsClose(wxCloseEvent& event);
        //        void OnShowFPGAcontrols(wxCommandEvent& event);
        //        void OnMyriad7Close(wxCloseEvent& event);
        //        void OnShowMyriad7(wxCommandEvent& event);
        void OnDeviceInfoClose(wxCloseEvent &event);
        void OnShowDeviceInfo(wxCommandEvent &event);
        void OnSPIClose(wxCloseEvent &event);
        void OnGPIOClose(wxCloseEvent &event);
        void OnShowSPI(wxCommandEvent &event);
        void OnShowGPIO(wxCommandEvent &event);
        void OnShowMeasurements(wxCommandEvent &event);
        void OnMeasurementsClose(wxCloseEvent &event);
        //        void OnNovenaClose(wxCloseEvent& event);
        //        void OnShowNovena(wxCommandEvent& event);
public:
        /** Constructor */
        void OnControlBoardConnect(wxCommandEvent &event);
        LMS8SuiteAppFrame(wxWindow *parent);
        //// end generated class members
        virtual ~LMS8SuiteAppFrame();

        // milans 220614
#ifndef __unix__
        void Initialize(HANDLE handle);
#else
        // B.J. -- unix support
        void Initialize(int handle);
#endif
        void InitializeSDR(lms_device_t *lmsControlSDR);

protected:

        lms_device_t* lmsControlSDR;  // B.J. connection to the LimeSDR board
       
        void OnLogDataTransfer(bool Tx, const unsigned char *data, const unsigned int length);
        void OnLogMessage(wxCommandEvent &event);
        static const wxString cWindowTitle;
        static const int cDeviceInfoCollumn = 1;
        static const int cDeviceVerRevMaskCollumn = 2;

        LMScomms *lms8controlPort;
        //        LMScomms* streamBoardPort;
        LMS8001 *lmsControl;
        lms8_pnlMiniLog *mMiniLog;
        //        fftviewer_frFFTviewer* fftviewer;

        lms8_ADF4002 *adfModule;
        lms8_ADF4002_wxgui *adfGUI;

        Si5351C *si5351module;
        lms8_Si5351C_wxgui *si5351gui;

        // msavic
        //         LMS_Programing_wxgui* programmer;
        //         RFSpark_wxgui* rfspark;
        //         HPM7_wxgui* hpm7;
        //         FPGAcontrols_wxgui* fpgaControls;
        //         Myriad7_wxgui* myriad7;
        lms8_dlgDeviceInfo *deviceInfo;
        lms8_SPI_wxgui *spi;
        lms8_GPIO_wxgui *gpio;
        //        LMS7002M_Novena_wxgui* novenaGui;
};

#endif // __LMS8SuiteAppFrame__
